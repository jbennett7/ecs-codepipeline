---
Parameters:
  ApplicationName:
    Description: Name of the Application
    Type: String

  VpcCidr:
    Description: The IP range (CIDR notation) for this VPC.
    Type: String
    Default: 10.0.0.0/16

  PublicSubnet1Cidr:
    Description: IP range for the first subnet.
    Type: String
    Default: 10.0.0.0/24

  PublicSubnet2Cidr:
    Description: IP range for the second subnet.
    Type: String
    Default: 10.0.0.0/24

Transform:
- AWS::CodeDeployBlueGreen

Hooks:
  CodeDeployBlooGreenHook:
    Type: AWS::CodeDeploy::BlueGreen
    Properties:
      TrafficRoutingConfig:
        Type: TimeBasedCanary
        TimeBasedCanary:
          StepPercentage: 15
          BakeTimeMins: 5
      Applications:
      - Target:
          Type: AWS::ECS::Service
          LogicalID: ECSDemoService
        ECSAttributes:
          TaskDefinitions:
          - BlueTaskDefinition
          - GreenTaskDefinition
        TaskSets:
        - BlueTaskSet
        - GreenTaskSet
        TrafficRouting:
          ProdTrafficRoute:
            Type: AWS::ElasticLoadBalancingV2::Listener
            LogicalID: ALBListenerProdTraffic
          TargetGroups:
          - ALBTargetGroupBlue
          - ALBTargetGroupGreen

Resources:
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref Vpc

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      AvailabilityZone:
        !Select
        - 0
        - !GetAZs ''
      CidrBlock: !Ref PublicSubnet1Cidr
      MapPublicIpOnLaunch: true

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      AvailabilityZone:
        !Select
        - 1
        - !GetAZs ''
      CidrBlock: !Ref PublicSubnet2Cidr
      MapPublicIpOnLaunch: true

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  AlbSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ALB security group.
      GroupName: !Sub ${ApplicationName}AlbSg
      VpcId: !Ref Vpc
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        Description: Port 5000
        FromPort: 5000
        ToPort: 5000
        IpProtocol: tcp

  EcsSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ECS security group.
      GroupName: !Sub ${ApplicationName}EcsSg
      VpcId: !Ref Vpc
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        Description: Port 5000
        FromPort: 5000
        ToPort: 5000
        IpProtocol: tcp

  TargetGroupBlue:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub ${ApplicationName}Blue
      TargetType: ip
      Protocol: HTTP
      Port: 5000
      VpcId: !Ref Vpc

  TargetGroupGreen:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub ${ApplicationName}Green
      TargetType: ip
      Protocol: HTTP
      Port: 5000
      VpcId: !Ref Vpc

  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        ForwardConfig:
          TargetGroups:
          - TargetGroupArn: !Ref TargetGroupBlue
            Weight: 1
      LoadBalancerArn: !Ref LoadBalancer
      Port: 5000
      Protocol: HTTP

  ListenerProdRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
      - Type: forward
        ForwardConfig:
          TargetGroups:
          - TargetGroupArn: !Ref TargetGroupBlue
            Weight: 1
      Conditions:
      - Field: http-header
        HttpHeaderConfig:
          HttpHeaderName: User-Agent
          Values:
          - Mozilla
      ListenerArn: !Ref Listener

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4
      Name: !Sub ${ApplicationName}Alb
      Scheme: internet-facing
      SecurityGroups:
      - !Ref AlbSecurityGroup
      Subnets: 
      - !Ref PublicSubnet1
      - !Ref PublicSubnet2
      Type: application

  EcsTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Sid: ''
          Effect: Allow
          Principal:
            Service: ecs-tasks.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  BlueTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ExecutionRoleArn: !GetAtt EcsTaskExecutionRole.Arn
      ContainerDefinitions:
      - Name: !Sub ${ApplicationName}
        Image: 956263508642.dkr.ecr.us-east-1.amazonaws.com/projecta/gohello:latest
        Essential: true
        PortMappings:
        - HostPort: 5000
          Protocol: tcp
          ContainerPort: 5000
      RequiresCompatibilities:
      - FARGATE
      NetworkMode: awsvpc
      Cpu: 256
      Memory: 512
      family: !Sub ${ApplicationName}

  EcsCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub ${ApplicationName}EcsCluster

  EcsService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !GetAtt EcsCluster.Arn
      DesiredCount: 1
      DeploymentController:
        Type: EXTERNAL

  BlueTaskSet:
    Type: AWS::ECS::TaskSet
    Properties:
      Cluster: !Ref EcsCluster
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsVpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
          - !Ref EcsSecurityGroup
        Subnets:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      PlatformVersion: 1.3.0
      Scale:
        Unit: PERCENT
        Value: 1
      Service: !Ref EcsService
      TaskDefinition: !Ref BlueTaskDefinition
      LoadBalancers:
      - ContainerName: !Sub ${ApplicationName}
        ContainerPort: 5000
        TargetGroupArn: !Ref TargetGroupBlue

  PrimaryTaskSet:
    Type: AWS::ECS::PrimaryTaskSet
    Properties:
      Cluster: !Ref EcsCluster
      Service: !Ref EcsService
      TaskSetId: !GetAtt BlueTaskSet.Id
